{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","tcpchecked","udpchecked","started","test","handleTCPSelect","tcpcb","document","getElementById","udpcb","checked","setState","console","log","disabled","handleUDPSelect","handleGenerate","xhr","XMLHttpRequest","count","value","delay","ip","port","proto_tcp","upperctx","gen_btn","obj","Object","command","open","setRequestHeader","onreadystatechange","readyState","status","timeout","setTimeout","queryFunction","innerHTML","clearTimeout","response","data","JSON","stringify","send","alert","className","htmlFor","id","type","defaultValue","onChange","this","onClick","defaultChecked","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.adda0dba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tstate = {tcpchecked : true, udpchecked: false, started: false};\n  \n\trender() {\n\t\treturn (\n    <div className=\"div-header\">\n      <header className=\"header\">Traffic Generator</header>\n      <div className=\"separator\"></div>\n      <form className=\"pure-form\">\n        <div className=\"pure-g\">\n          <div className=\"pure-u-1-4\" />\n          <div className=\"pure-u-1-4\">\n            <label htmlFor=\"count\">Number of flows to generate</label>\n          </div>\n          <div className=\"pure-u-1-4\">\n            <input id=\"count\" className=\"pure-input-1\" type=\"number\" defaultValue=\"1\"/>\n          </div>\n          <div className=\"pure-u-1-4\" />\n        </div>\n        <div className=\"separator\"></div>\n        <div className=\"pure-g\">\n          <div className=\"pure-u-1-4\" />\n          <div className=\"pure-u-1-4\">\n            <label htmlFor=\"delay\">Delay between flows (millis)</label>\n          </div>\n          <div className=\"pure-u-1-4\">\n            <input id=\"delay\" className=\"pure-input-1\" type=\"number\" defaultValue=\"1000\"/>\n          </div>\n          <div className=\"pure-u-1-4\" />\n        </div>\n        <div className=\"separator\"></div>\n        <div className=\"pure-g\">\n          <div className=\"pure-u-1-4\" />\n          <div className=\"pure-u-1-4\">\n            <label htmlFor=\"url\">URL (default: www.nfl.com)</label>\n          </div>\n          <div className=\"pure-u-1-4\">\n            <input id=\"url\" className=\"pure-input-1\" type=\"text\" defaultValue=\"www.nfl.com\"/>\n          </div>\n          <div className=\"pure-u-1-4\" />\n        </div>\n        <div className=\"separator\"></div>\n        <div className=\"pure-g\">\n          <div className=\"pure-u-1-4\" />\n          <div className=\"pure-u-1-4\">\n            <label htmlFor=\"port\">Port number</label>\n          </div>\n          <div className=\"pure-u-1-4\">\n            <input id=\"port\" className=\"pure-input-1\" type=\"number\" defaultValue=\"80\"/>\n          </div>\n          <div className=\"pure-u-1-4\" />\n        </div>\n\n        <div className=\"separator\"></div>\n        <div className=\"pure-g\">\n          <div className=\"pure-u-1-4\" />\n          <div className=\"pure-u-1-4\">\n            <label htmlFor=\"tcpcb\">Select protocol</label>\n          </div>\n          <div className=\"pure-u-1-4\">\n            <div className=\"pure-g\">\n              <label id=\"tcplabel\" htmlFor=\"tcpcb\" className=\"pure-checkbox pure-u-1-2\">\n                {\" \"}\n                TCP{\" \"}\n              </label>\n              <input\n\t\t\t\tid=\"tcpcb\"\n\t\t\t\tonChange = {this.test}\n\t\t\t\tonClick= {this.handleTCPSelect}\n                className=\"pure-checkbox pure-u-1-2\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tdefaultChecked={this.state.tcpchecked}\n              />\n            </div>\n            <div></div>\n            <div className=\"pure-g\">\n              <label id=\"udplabel\" htmlFor=\"udpcb\" className=\"pure-checkbox pure-u-1-2\">\n                {\" \"}\n                UDP{\" \"}\n              </label>\n              <input\n\t\t\t\tid=\"udpcb\"\n\t\t\t\tonClick= {this.handleUDPSelect}\n                className=\"pure-checkbox pure-u-1-2\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tdefaultChecked={this.state.udpchecked}\n              />\n            </div>\n          </div>\n          <div className=\"pure-u-1-4\" />\n        </div>\n      </form>\n\t  <div className=\"separator\"></div>\n\t  <div className=\"separator\"></div>\n      <div className=\"pure-g\">\n\t  <div className=\"pure-u-1-5\" />\n        <div className=\"pure-u-1-5\" />\n        <button id=\"generate\" onClick={this.handleGenerate} className=\"button-traff pure-button pure-u-1-5\">Generate</button>\n        <div className=\"pure-u-1-5\" />\n\t\t<div className=\"pure-u-1-5\" />\n\n      </div>\n    </div>\n     );\n}\n\ntest = () =>\n{\n\n}\n\nhandleTCPSelect = () =>\n{\n\tlet tcpcb = document.getElementById(\"tcpcb\");\n\tlet udpcb = document.getElementById(\"udpcb\");\n\tif(tcpcb.checked == true)\n\t{\n\t\tthis.setState({ tcpchecked:false});\n\t        console.log(\"I am here 3\");\n\t\tudpcb.checked=false;\n\t\tudpcb.disabled=true;\n\t}\n\telse\n\t{\n\t        console.log(\"I am here 4\");\n\t\tthis.setState({ tcpchecked:true});\n\t\tudpcb.checked=true;\n\t\tudpcb.disabled=false;\n\t\ttcpcb.disabled=true;\n\t}\n}\n\nhandleUDPSelect = () =>\n{\n\tlet tcpcb = document.getElementById(\"tcpcb\");\n\tlet udpcb = document.getElementById(\"udpcb\");\n\tif(udpcb.checked)\n\t{\n\t        console.log(\"I am here 1\");\n\t\tthis.setState({ udpchecked:false});\n\t\ttcpcb.checked=false;\n\t\ttcpcb.disabled=true;\n\t}\n\telse\n\t{\n\t        console.log(\"I am here 2\");\n\t\tthis.setState({ udpchecked:true});\n\t\ttcpcb.checked=true;\n\t\ttcpcb.disabled=false;\n\t\tudpcb.disabled=true;\n\t}\n}\n\nhandleGenerate = () =>\n{\n\n    var xhr = new XMLHttpRequest();\n    let count = document.getElementById(\"count\").value;\n    let delay = document.getElementById(\"delay\").value;\n    let ip = document.getElementById(\"url\").value;\n    let port = document.getElementById(\"port\").value;\n    let proto_tcp = document.getElementById(\"tcpcb\").checked;\n    let upperctx = this;\n    let gen_btn = document.getElementById(\"generate\")\n    var obj = new Object();\n    if(count===\"\" || delay===\"\" || ip===\"\" || port===\"\")\n    {\n\talert(\"Error : Input field cannot be empty\");\n\treturn;\n    }\n    if(this.state.started == false)\n    {\n\tobj.command = 1; // start\n\tobj.count = count;\n\tobj.delay = delay;\n\tobj.ip = ip;\n\tobj.port = port;\n\tobj.proto_tcp = proto_tcp;\n    }\n    else\n    {\n\tobj.command = 2;\n    }\n\n    var url = \"http://localhost:9000\";\n    xhr.open(\"POST\", url, true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.onreadystatechange = function() {\n\tif (xhr.readyState === 4 && xhr.status === 200) {\n\t    if(upperctx.state.started == false)\n\t    {\n\t\tupperctx.setState({started: true});\n\t\tupperctx.timeout = setTimeout(upperctx.queryFunction, count * delay)\n\t\tgen_btn.innerHTML = \"Stop\";\n\t\tconsole.log(\"Stop set\");\n\t    }\n\t    else\n\t    {\n\t\tupperctx.setState({started: false});\n\t\tclearTimeout(upperctx.timeout);\n\t\tgen_btn.innerHTML = \"Generate\";\n\t\tconsole.log(\"Gen set\");\n\n\t    }\n\t    console.log(xhr.response);\n\t}\n    };\n    var data = JSON.stringify(obj);\n    console.log(data);\n    xhr.send(data);\n\n}\n\nqueryFunction = () =>\n{\n    let gen_btn = document.getElementById(\"generate\")\n    this.setState({started: false});\n    gen_btn.innerHTML = \"Generate\";\n    console.log(\"Timer expired\")\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}